name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
      PYTHONIOENCODING: utf-8
      PIP_DOWNLOAD_CACHE: ${{ github.workspace }}/../.pip_download_cache
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - name: Set git crlf/eol
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Add requirements
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions

    - name: Prepare vcpkg environment for macos
      if: runner.os == 'macOS'
      run: |
        export VCPKG_ROOT=/usr/local/share/vcpkg
        echo "VCPKG_ROOT=$VCPKG_ROOT" >> $GITHUB_ENV

    - name: Install macos deps with brew
      if: runner.os == 'macOS'
      run: |
        brew install ninja
        vcpkg update
        vcpkg install libdatrie:x64-osx

    - name: Prepare compiler environment for Windows
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    # this is supposed to cache automatically
    - name: Install vcpkg plus packages
      uses: lukka/run-vcpkg@v6.1
      if: runner.os != 'Linux'
      with:
        vcpkgTriplet: ${{ matrix.triplet }}
        vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
        vcpkgArguments: libdatrie
        vcpkgGitCommitId: b60f003ccf5fe8613d029f49f835c8929a66eb61

    # This points the extension builder at the vcpkg toolchain file
    - name: Set vcpkg.cmake path on ${{ matrix.os }}
      if: runner.os != 'Linux'
      run: |
        echo "CMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" >> $GITHUB_ENV

    - name: apt helper action
      if: runner.os == 'Linux'
      uses: ryankurte/action-apt@v0.2.0
      with:
        # architectures to pass to dpkg --add-architecture
        #architectures: # optional
        packages: libdatrie-dev pybind11-dev ninja-build

    - name: Test in place
      if: runner.os != 'Windows'
      run: |
        tox -e py

    - name: Build dist pkgs
      run: |
        tox -e deploy

    - name: Check wheel
      run: |
        tox -e check
